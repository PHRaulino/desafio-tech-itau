// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package handlers

import (
	"database/sql"
	"github.com/google/wire"
	"github.com/phraulino/cinetuber/pkgs/sessoes/adapters"
	"github.com/phraulino/cinetuber/pkgs/sessoes/core"
	"github.com/phraulino/cinetuber/pkgs/sessoes/usecases"
)

// Injectors from pedidos_handler_wire.go:

func InitializeHandler(db *sql.DB) *SessoesHandler {
	sqlLiteRepoSessoes := adapters.NewSQLLiteRepoSessoes(db)
	criaSessaoUseCase := usecases.NewCriaSessaoUseCase(sqlLiteRepoSessoes)
	listaSessoesUseCase := usecases.NewListaSessoesUseCase(sqlLiteRepoSessoes)
	cacheEmMemoriaRepoReservas := adapters.NewCacheEmMemoriaRepoReservas()
	listaAssentosUseCase := usecases.NewListaAssentosUseCase(sqlLiteRepoSessoes, cacheEmMemoriaRepoReservas)
	sessoesHandler := NewSessoesHandler(criaSessaoUseCase, listaSessoesUseCase, listaAssentosUseCase)
	return sessoesHandler
}

// pedidos_handler_wire.go:

var SessoesSet = wire.NewSet(adapters.NewSQLLiteRepoSessoes, adapters.NewCacheEmMemoriaRepoReservas, wire.Bind(new(core.RepoSessoes), new(*adapters.SQLLiteRepoSessoes)), wire.Bind(new(core.RepoReserva), new(*adapters.CacheEmMemoriaRepoReservas)), usecases.NewCriaSessaoUseCase, usecases.NewListaSessoesUseCase, usecases.NewListaAssentosUseCase)
